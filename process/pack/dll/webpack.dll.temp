const webpack = require('webpack');
const path = require('path');
const ROOT = path.resolve(__dirname, '../');

const Libs = {
    // ui: ['antd'],
    base: [{{#baseAry}}"{{.}}",{{/baseAry}}],
    frame: [{{#frameAry}}"{{.}}",{{/frameAry}}],
}

const isProEnv = process.env.NODE_ENV === 'production';
const outputPath = isProEnv ? path.resolve(ROOT, '{{buildDir}}') : path.resolve(ROOT, '{{devDir}}'); 
const outDir = idProEnv ? '{{buildDir}}' : '{{devDir}}';

const DllConfig = {
    entry: {...Libs},
    // entry: {
    //     "lib": vendor
    // },
    output: {
        filename: '[name].js',
        path: outputPath,
        library: '[name]',
        publicPath: '/'
    },
    plugins: [
        new webpack.DllPlugin({
            path: path.resolve(ROOT, outputPath, '[name]-manifest.json'),
            name: '[name]',
            context: ROOT
        }),
        new AddAssetHtmlPlugin([
            { filepath: require.resolve(`../${outDir}/base`), includeSourcemap: false, hash: true },
            { filepath: require.resolve(`../${outDir}/frame`), includeSourcemap: false, hash: true },
        ]),
    ],
    resolve: {
        extensions: ['.js', '.jsx']
    }
}

if (isProEnv) {
    DllConfig.plugins.push(new webpack.optimize.UglifyJsPlugin({
        output: {
            beautify: false,
            comments: false
        },
        compressor: {
            warnings: false
        }
    }))
}

module.exports = DllConfig;